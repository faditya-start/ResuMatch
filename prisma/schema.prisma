// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id         String   @id @default(uuid())
  userId     String
  rawText    String
  embedding  Float[]
  generatedBullets String[] @default([])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  bullets       Bullet[]
  matchResults  MatchResult[] @relation("ResumeToMatchResult")
}

model Bullet {
  id        String   @id @default(uuid())
  resumeId  String
  content   String
  createdAt DateTime @default(now())

  Resume Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)
}

model JobDescription {
  id         String   @id @default(uuid())
  userId     String
  title      String
  content    String
  embedding  Float[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  matchResults MatchResult[] @relation("JobToMatchResult")
}

model MatchResult {
  id                String   @id @default(uuid())
  resumeId          String
  jobDescriptionId  String
  score             Float
  createdAt         DateTime @default(now())
  Resume            Resume         @relation("ResumeToMatchResult", fields: [resumeId], references: [id])
  JobDescription    JobDescription @relation("JobToMatchResult", fields: [jobDescriptionId], references: [id])
}